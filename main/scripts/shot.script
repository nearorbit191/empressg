local platypus= require "platypus.platypus"
function init(self)
	lookingAt=2
	dmg=1
	self.input_state = {}
	self.platypus = platypus.create({
		collisions = {
			separation = platypus.SEPARATION_RAYS,
			groups = {
				[hash("ground")] = platypus.DIR_ALL,
				[hash("onewayplatform")] = platypus.DIR_ALL,
				[hash("onewayplatform")] = platypus.DIR_DOWN,
				[hash("onewaydoor")] = platypus.DIR_LEFT,
			},
			left = 10, right = 10, top = 10, bottom = 10, offset = vmath.vector3(0, 0, 0)
		},
		gravity=0,
		debug=true,

	})
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local wall_contact = self.platypus.has_wall_contact()
	--print(lookingAt)
	if lookingAt==1 then
		self.platypus.left(800)
		--print("disparar a la izquierda")
	elseif lookingAt==2 then
		self.platypus.right(800)
		--print("disparar a la izquierda")
	else
		print("baile")
	end
	
	if active and not wall_contact then
		timer.delay(4, false, function() go.delete(); print("deleted by time"); msg.post("mona#mona", "bulletDed") end)

	end
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	self.platypus.update(dt)
end

function on_message(self, message_id, message, sender)
	self.platypus.on_message(message_id, message, sender)
	if message_id==hash("lookingLeft") then
		lookingAt=1
		active=true
	elseif message_id==hash("lookingRight") then
		lookingAt=2
		active=true
	elseif message_id == platypus.WALL_CONTACT then
		print("Wall contact")
		go.delete()
		msg.post("mona#mona", "bulletDed")
	end
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
